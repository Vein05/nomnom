name: Build and Release Binaries

on:
  release:
    types: [created]

jobs:
  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            extension: ""
            cgo: "0"
          - os: linux
            arch: arm64
            extension: ""
            cgo: "0"
          - os: darwin
            arch: amd64
            extension: ""
            cgo: "0"
          - os: darwin
            arch: arm64
            extension: ""
            cgo: "0"
          - os: windows
            arch: amd64
            extension: ".exe"
            cgo: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install MinGW (Windows CGO support)
        if: matrix.os == 'windows' && matrix.cgo == '1'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64

      - name: Build Binary
        env:
          CGO_ENABLED: ${{ matrix.cgo }}
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CC: x86_64-w64-mingw32-gcc
        run: |
          go build -v -ldflags "-X main.Version=${{ github.ref_name }}" -o "nomnom${{ matrix.extension }}"
          zip "nomnom-${{ matrix.os }}-${{ matrix.arch }}.zip" "nomnom${{ matrix.extension }}" LICENSE README.md config.example.json

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: nomnom-${{ matrix.os }}-${{ matrix.arch }}.zip
          asset_name: nomnom-${{ matrix.os }}-${{ matrix.arch }}.zip
          asset_content_type: application/zip